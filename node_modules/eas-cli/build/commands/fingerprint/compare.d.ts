import EasCommand from '../../commandUtils/EasCommand';
import { ExpoGraphqlClient } from '../../commandUtils/context/contextUtils/createGraphqlClient';
import { BuildStatus } from '../../graphql/generated';
import { RequestedPlatform } from '../../platform';
export default class FingerprintCompare extends EasCommand {
    static description: string;
    static strict: boolean;
    static examples: string[];
    static args: {
        name: string;
        description: string;
        required: boolean;
    }[];
    static flags: {
        json: import("@oclif/core/lib/interfaces").BooleanFlag<boolean>;
        'non-interactive': import("@oclif/core/lib/interfaces").BooleanFlag<boolean>;
        'build-id': import("@oclif/core/lib/interfaces").OptionFlag<string[] | undefined>;
        'update-id': import("@oclif/core/lib/interfaces").OptionFlag<string[] | undefined>;
        open: import("@oclif/core/lib/interfaces").BooleanFlag<boolean>;
    };
    static contextDefinition: {
        vcsClient: import("../../commandUtils/context/VcsClientContextField").default;
        loggedIn: import("../../commandUtils/context/LoggedInContextField").default;
        privateProjectConfig: import("../../commandUtils/context/PrivateProjectConfigContextField").PrivateProjectConfigContextField;
        projectId: import("../../commandUtils/context/ProjectIdContextField").ProjectIdContextField;
    };
    runAsync(): Promise<void>;
}
export declare function selectBuildToCompareAsync(graphqlClient: ExpoGraphqlClient, projectId: string, projectDisplayName: string, { filters, }?: {
    filters?: {
        statuses?: BuildStatus[];
        platform?: RequestedPlatform;
        profile?: string;
        hasFingerprint?: boolean;
    };
}): Promise<string | null>;
